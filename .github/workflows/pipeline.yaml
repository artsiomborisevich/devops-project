name: ci-cd

on:
  push:
    tags:
      - "v*.*"

jobs:
  helm-files:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ env.files }}
    steps:
      - name: Get files from repo
        uses: actions/checkout@v3
        id: files
      - run: |
          FILES="$(ls -d ./drupal/templates/* | jq -R -s -c 'split("\n")[:-1]')"
          echo "files=`echo -n $FILES`" >> $GITHUB_ENV

  testing-helm-manifests:
    needs: helm-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        manifest-files: ${{fromJson(needs.helm-files.outputs.files)}}
      fail-fast: false
    steps:
      - name: Get files from repo
        uses: actions/checkout@v3

      - name: Test helm files with kubeval
        continue-on-error: true
        uses: instrumenta/kubeval-action@master
        with:
          files: ${{matrix.manifest-files}}

  testing-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - name: Get files from repo
        uses: actions/checkout@v3

      - name: Test Dockerfiles with hadolint
        continue-on-error: true
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error

  ci-cd:
    needs: [ testing-dockerfile, testing-helm-manifests ]
    env:
      USER: ${{ github.actor }}
      REPO: ${{ github.repository }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      repository-projects: write
      packages: write
    steps:
      - name: Get files from repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO }}:latest
            ghcr.io/${{ env.REPO }}:${{ github.ref_name }}

      - name: Helm tool installer
        uses: Azure/setup-helm@v3

      - name: Helm Package
        run: |
          helm package drupal --version=${{ github.ref_name }} --app-version=${{ github.ref_name }} -d ./helm-releases
          helm repo index --url https://artsiomborisevich.github.io/devops-project/ --merge index.yaml .

      - name: Add helm package to git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Generated by GitHub Action. Version ${{ github.ref_name }}"

      - name: Push changes to git
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: project_borisevich
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content :rocket:'
          SLACK_TITLE: 'New version of the project ${{ env.USER }}-${{ env.REPO }}-${{ github.ref_name }} has been released'
          SLACK_USERNAME: Artiom Borisevich
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

